# version: "3.8"
# services:
#   app-tier:
#     build:
#       context: ./app-tier
#     ports:
#       - "4000:4000"
#     depends_on:
#       - db
#     environment:
#       - DB_HOST=db
#       - DB_USER=admin
#       - DB_PWD=YourPassword
#       - DB_DATABASE=webappdb

#   web-tier:
#     build:
#       context: ./web-tier
#     ports:
#       - "3000:3000"

#   db:
#     image: mysql:8.0
#     environment:
#       MYSQL_ROOT_PASSWORD: rootpassword
#       MYSQL_DATABASE: webappdb
#       MYSQL_USER: admin
#       MYSQL_PASSWORD: YourPassword
#     ports:
#       - "3306:3306"
#     volumes:
#       - db_data:/var/lib/mysql
#       - ./init.sql:/docker-entrypoint-initdb.d/init.sql

#   nginx:
#     image: nginx:latest
#     container_name: nginx
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf:ro
#       - ./web-tier/build:/usr/share/nginx/html:ro
#     depends_on:
#       - app-tier
#       - web-tier

# volumes:
#   db_data:





version: "3.8"
services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./web-tier/build:/usr/share/nginx/html
    depends_on:
      - web-tier
      - app-tier

  web-tier:
    build:
      context: ./web-tier
    ports:
      - "3000:3000"
    # Remove port mapping as Nginx will handle routing

  app-tier:
    build:
      context: ./app-tier

    ports:
      - "4000:4000"
    expose:
      - "4000"

    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=admin
      - DB_PWD=YourPassword
      - DB_DATABASE=webappdb

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: webappdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: YourPassword
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  db_data: